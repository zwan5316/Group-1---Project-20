{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 910ed3c519f3431027b6","webpack:///./src/windowPostMessageProxy.ts"],"names":[],"mappings":"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","file":"windowPostMessageProxy.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"window-post-message-proxy\"] = factory();\n\telse\n\t\troot[\"window-post-message-proxy\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 910ed3c519f3431027b6","interface IDeferred {\r\n  resolve: <T>(value?: T | Promise<T>) => void;\r\n  reject: <T>(error: T) => void;\r\n  promise: Promise<any>;\r\n}\r\n\r\ninterface IDeferredCache {\r\n  [messageId: string]: IDeferred;\r\n}\r\n\r\nexport interface ITrackingProperties {\r\n  id: string;\r\n}\r\n\r\nexport interface IAddTrackingProperties {\r\n  <T>(message: T, trackingProperties: ITrackingProperties): T;\r\n}\r\n\r\nexport interface IGetTrackingProperties {\r\n  (message: any): ITrackingProperties;\r\n}\r\n\r\nexport interface IProcessTrackingProperties {\r\n  addTrackingProperties: IAddTrackingProperties;\r\n  getTrackingProperties: IGetTrackingProperties;\r\n}\r\n\r\nexport interface IIsErrorMessage {\r\n  (message: any): boolean;\r\n}\r\n\r\nexport interface IMessageHandler {\r\n  test(message: any): boolean;\r\n  handle(message: any): any;\r\n}\r\n\r\nexport interface IWindowPostMessageProxyOptions {\r\n  receiveWindow?: Window;\r\n  processTrackingProperties?: IProcessTrackingProperties;\r\n  isErrorMessage?: IIsErrorMessage;\r\n  name?: string;\r\n  logMessages?: boolean;\r\n  eventSourceOverrideWindow?: Window;\r\n  suppressWarnings?: boolean;\r\n}\r\n\r\nexport class WindowPostMessageProxy {\r\n  // Static\r\n  static defaultAddTrackingProperties<T>(message: T, trackingProperties: ITrackingProperties): T {\r\n    (<any>message)[WindowPostMessageProxy.messagePropertyName] = trackingProperties;\r\n    return message;\r\n  }\r\n  static defaultGetTrackingProperties(message: any): ITrackingProperties {\r\n    return message[WindowPostMessageProxy.messagePropertyName];\r\n  }\r\n\r\n  static defaultIsErrorMessage(message: any): boolean {\r\n    return !!message.error;\r\n  }\r\n\r\n  private static messagePropertyName = \"windowPostMessageProxy\";\r\n  /**\r\n   * Utility to create a deferred object.\r\n   */\r\n  // TODO: Look to use RSVP library instead of doing this manually.\r\n  // From what I searched RSVP would work better because it has .finally and .deferred; however, it doesn't have Typings information. \r\n  private static createDeferred(): IDeferred {\r\n    const deferred: IDeferred = {\r\n      resolve: null,\r\n      reject: null,\r\n      promise: null\r\n    };\r\n\r\n    const promise = new Promise((resolve: () => void, reject: () => void) => {\r\n      deferred.resolve = resolve;\r\n      deferred.reject = reject;\r\n    });\r\n\r\n    deferred.promise = promise;\r\n\r\n    return deferred;\r\n  }\r\n\r\n  /**\r\n   * Utility to generate random sequence of characters used as tracking id for promises.\r\n   */\r\n  private static createRandomString(): string {\r\n    return (Math.random() + 1).toString(36).substring(7);\r\n  }\r\n\r\n  // Private\r\n  private logMessages: boolean;\r\n  private name: string;\r\n  private addTrackingProperties: IAddTrackingProperties;\r\n  private getTrackingProperties: IGetTrackingProperties;\r\n  private isErrorMessage: IIsErrorMessage;\r\n  private receiveWindow: Window;\r\n  private pendingRequestPromises: IDeferredCache = {};\r\n  private handlers: IMessageHandler[];\r\n  private windowMessageHandler: (e: MessageEvent) => any;\r\n  private eventSourceOverrideWindow: Window;\r\n  private suppressWarnings: boolean;\r\n\r\n  constructor(\r\n    options: IWindowPostMessageProxyOptions = {\r\n      processTrackingProperties: {\r\n        addTrackingProperties: WindowPostMessageProxy.defaultAddTrackingProperties,\r\n        getTrackingProperties: WindowPostMessageProxy.defaultGetTrackingProperties\r\n      },\r\n      isErrorMessage: WindowPostMessageProxy.defaultIsErrorMessage,\r\n      receiveWindow: window,\r\n      name: WindowPostMessageProxy.createRandomString()\r\n    }) {\r\n\r\n    // save options with defaults\r\n    this.addTrackingProperties = (options.processTrackingProperties && options.processTrackingProperties.addTrackingProperties) || WindowPostMessageProxy.defaultAddTrackingProperties;\r\n    this.getTrackingProperties = (options.processTrackingProperties && options.processTrackingProperties.getTrackingProperties) || WindowPostMessageProxy.defaultGetTrackingProperties;\r\n    this.isErrorMessage = options.isErrorMessage || WindowPostMessageProxy.defaultIsErrorMessage;\r\n    this.receiveWindow = options.receiveWindow || window;\r\n    this.name = options.name || WindowPostMessageProxy.createRandomString();\r\n    this.logMessages = options.logMessages || false;\r\n    this.eventSourceOverrideWindow = options.eventSourceOverrideWindow;\r\n    this.suppressWarnings = options.suppressWarnings || false;\r\n\r\n    if (this.logMessages) {\r\n      console.log(`new WindowPostMessageProxy created with name: ${this.name} receiving on window: ${this.receiveWindow.document.title}`);\r\n    }\r\n\r\n    // Initialize\r\n    this.handlers = [];\r\n    this.windowMessageHandler = (event: MessageEvent) => this.onMessageReceived(event);\r\n    this.start();\r\n  }\r\n\r\n  /**\r\n   * Adds handler.\r\n   * If the first handler whose test method returns true will handle the message and provide a response. \r\n   */\r\n  addHandler(handler: IMessageHandler) {\r\n    this.handlers.push(handler);\r\n  }\r\n  /**\r\n   * Removes handler.\r\n   * The reference must match the original object that was provided when adding the handler.\r\n   */\r\n  removeHandler(handler: IMessageHandler) {\r\n    const handlerIndex = this.handlers.indexOf(handler);\r\n    if (handlerIndex === -1) {\r\n      throw new Error(`You attempted to remove a handler but no matching handler was found.`);\r\n    }\r\n\r\n    this.handlers.splice(handlerIndex, 1);\r\n  }\r\n\r\n  /**\r\n   * Start listening to message events.\r\n   */\r\n  start() {\r\n    this.receiveWindow.addEventListener('message', this.windowMessageHandler);\r\n  }\r\n\r\n  /**\r\n   * Stops listening to message events.\r\n   */\r\n  stop() {\r\n    this.receiveWindow.removeEventListener('message', this.windowMessageHandler);\r\n  }\r\n\r\n  /**\r\n   * Post message to target window with tracking properties added and save deferred object referenced by tracking id.\r\n   */\r\n  postMessage<T>(targetWindow: Window, message: any): Promise<T> {\r\n    // Add tracking properties to indicate message came from this proxy\r\n    const trackingProperties: ITrackingProperties = { id: WindowPostMessageProxy.createRandomString() };\r\n    this.addTrackingProperties(message, trackingProperties);\r\n\r\n    if (this.logMessages) {\r\n      console.log(`${this.name} Posting message:`);\r\n      console.log(JSON.stringify(message, null, '  '));\r\n    }\r\n\r\n    targetWindow.postMessage(message, \"*\");\r\n    const deferred = WindowPostMessageProxy.createDeferred();\r\n    this.pendingRequestPromises[trackingProperties.id] = deferred;\r\n\r\n    return deferred.promise;\r\n  }\r\n\r\n  /**\r\n   * Send response message to target window.\r\n   * Response messages re-use tracking properties from a previous request message.\r\n   */\r\n  private sendResponse(targetWindow: Window, message: any, trackingProperties: ITrackingProperties): void {\r\n    this.addTrackingProperties(message, trackingProperties);\r\n\r\n    if (this.logMessages) {\r\n      console.log(`${this.name} Sending response:`);\r\n      console.log(JSON.stringify(message, null, '  '));\r\n    }\r\n\r\n    targetWindow.postMessage(message, \"*\");\r\n  }\r\n\r\n  /**\r\n   * Message handler.\r\n   */\r\n  private onMessageReceived(event: MessageEvent) {\r\n    if (this.logMessages) {\r\n      console.log(`${this.name} Received message:`);\r\n      console.log(`type: ${event.type}`);\r\n      console.log(JSON.stringify(event.data, null, '  '));\r\n    }\r\n\r\n    let sendingWindow = this.eventSourceOverrideWindow || event.source;\r\n    let message: any = event.data;\r\n\r\n    if (typeof message !== \"object\") {\r\n      if (!this.suppressWarnings) {\r\n        console.warn(`Proxy(${this.name}): Received message that was not an object. Discarding message`);\r\n      }\r\n      return;\r\n    }\r\n\r\n    let trackingProperties: ITrackingProperties;\r\n    try {\r\n      trackingProperties = this.getTrackingProperties(message);\r\n    }\r\n    catch (e) {\r\n      if (!this.suppressWarnings) {\r\n        console.warn(`Proxy(${this.name}): Error occurred when attempting to get tracking properties from incoming message:`, JSON.stringify(message, null, '  '), \"Error: \", e);\r\n      }\r\n    }\r\n\r\n    let deferred: IDeferred;\r\n    if (trackingProperties) {\r\n      deferred = this.pendingRequestPromises[trackingProperties.id];\r\n    }\r\n\r\n    // If message does not have a known ID, treat it as a request\r\n    // Otherwise, treat message as response\r\n    if (!deferred) {\r\n      const handled = this.handlers.some(handler => {\r\n        let canMessageBeHandled = false;\r\n        try {\r\n          canMessageBeHandled = handler.test(message);\r\n        }\r\n        catch (e) {\r\n          if (!this.suppressWarnings) {\r\n            console.warn(`Proxy(${this.name}): Error occurred when handler was testing incoming message:`, JSON.stringify(message, null, '  '), \"Error: \", e);\r\n          }\r\n        }\r\n\r\n        if (canMessageBeHandled) {\r\n          let responseMessagePromise: Promise<any>;\r\n\r\n          try {\r\n            responseMessagePromise = Promise.resolve(handler.handle(message));\r\n          }\r\n          catch (e) {\r\n            if (!this.suppressWarnings) {\r\n              console.warn(`Proxy(${this.name}): Error occurred when handler was processing incoming message:`, JSON.stringify(message, null, '  '), \"Error: \", e);\r\n            }\r\n            responseMessagePromise = Promise.resolve();\r\n          }\r\n\r\n          responseMessagePromise\r\n            .then(responseMessage => {\r\n              if (!responseMessage) {\r\n                const warningMessage = `Handler for message: ${JSON.stringify(message, null, '  ')} did not return a response message. The default response message will be returned instead.`;\r\n                if (!this.suppressWarnings) {\r\n                  console.warn(`Proxy(${this.name}): ${warningMessage}`);\r\n                }\r\n                responseMessage = {\r\n                  warning: warningMessage\r\n                };\r\n              }\r\n              this.sendResponse(sendingWindow, responseMessage, trackingProperties);\r\n            });\r\n\r\n          return true;\r\n        }\r\n      });\r\n\r\n      /**\r\n       * TODO: Consider returning an error message if nothing handled the message.\r\n       * In the case of the Report receiving messages all of them should be handled,\r\n       * however, in the case of the SDK receiving messages it's likely it won't register handlers\r\n       * for all events. Perhaps make this an option at construction time.\r\n       */\r\n      if (!handled && !this.suppressWarnings) {\r\n        console.warn(`Proxy(${this.name}) did not handle message. Handlers: ${this.handlers.length}  Message: ${JSON.stringify(message, null, '')}.`);\r\n        // this.sendResponse({ notHandled: true }, trackingProperties);\r\n      }\r\n    }\r\n    else {\r\n      /**\r\n       * If error message reject promise,\r\n       * Otherwise, resolve promise\r\n       */\r\n      let isErrorMessage = true;\r\n      try {\r\n        isErrorMessage = this.isErrorMessage(message);\r\n      }\r\n      catch (e) {\r\n        console.warn(`Proxy(${this.name}) Error occurred when trying to determine if message is consider an error response. Message: `, JSON.stringify(message, null, ''), 'Error: ', e);\r\n      }\r\n\r\n      if (isErrorMessage) {\r\n        deferred.reject(message);\r\n      }\r\n      else {\r\n        deferred.resolve(message);\r\n      }\r\n\r\n      // TODO: Move to .finally clause up where promise is created for better maitenance like original proxy code.\r\n      delete this.pendingRequestPromises[trackingProperties.id];\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/windowPostMessageProxy.ts"],"sourceRoot":""}